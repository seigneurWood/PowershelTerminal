<Window x:Class="PSterminal.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="450" Width="725">
    <Window.Resources>

        <Style x:Key="MenuStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="MenuBorder" Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="15" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <!--ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/-->
                                    <ColumnDefinition x:Name="Col3" Width="14"/>
                                </Grid.ColumnDefinitions>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1"
                                          Margin="8,2,8,2"
                                          x:Name="HeaderHost"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>
                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="LightGray" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" Background="LightGray" BorderBrush="Gray" BorderThickness="1" Padding="1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel HorizontalAlignment="Left" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="2" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>
                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="#FFAAAAAA" TargetName="MenuBorder"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SeparatorStyle"
           TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1,0,0,0"/>
            <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
            <Setter Property="Margin" Value="1,0,-2,0"/>
            <Setter Property="Width" Value="4"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <Style x:Key="ButtonStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
        </Style>

        <ControlTemplate x:Key="ButtonCloseStyle" TargetType="Button">
            <Border x:Name="Border" BorderThickness="0" Background="Transparent">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\closeIcon.png"
                       Height="10" Width="10"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FFDE4B4B"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
            <Border x:Name="ButtonBorder" Style="{StaticResource ButtonStyle}">
                <ContentPresenter RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="true">
                    <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="1"/>
                    <!--Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Gray"/-->
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#FFA8A8A8"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="White"/>
                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Gray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ImageStyle" TargetType="Image">
            <Setter Property="Width" Value="22"/>
            <Setter Property="Height" Value="22"/>
        </Style>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="35"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="#FFDEDEDE">
            <Button Name="NewScript" Command="New" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\newdoc.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Button Name="OpenScript" Command="Open" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\OpenFile.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Button Name="Save" Command="Save" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\save.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Button Name="Copy" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\Copy.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Button Name="Paste" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\paste.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Border Style="{StaticResource SeparatorStyle}"/>
            <Button Name="Undo" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\Undo.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Button Name="Redo" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\Redo.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <Border Style="{StaticResource SeparatorStyle}"/>
            <Button Name="Run" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\Go.png" Height="17" Width="17"/>
            </Button>
            <!--Separator Width="3" Height="auto"/-->
            <Border Style="{StaticResource SeparatorStyle}"/>
            <Button Name="RunPowerShell" Template="{StaticResource ButtonTemplate}">
                <Image Source="C:\Users\Владислав\Desktop\PowershelTerminal\PSterminal\PSterminal\Icon\powershell.png" Style="{StaticResource ImageStyle}"/>
            </Button>
            <!--Border Style="{StaticResource SeparatorStyle}"/>
            <Button Content="View1" Style="{StaticResource ButtonStyle}"/>
            <Button Content="View2" Style="{StaticResource ButtonStyle}"/>
            <Button Content="View3" Style="{StaticResource ButtonStyle}"/>
            <Border Style="{StaticResource SeparatorStyle}"/>
            <Button Content="ViewCommand" Style="{StaticResource ButtonStyle}"/>
            <Button Content="NoViewCommand" Style="{StaticResource ButtonStyle}"/-->
        </StackPanel>
        <Button Content="Run" Height="30" Width="60" Grid.Row="4" Click="Button_Click_1"/>
        <!--RichTextBox Name="tbOut" Grid.Row="2">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </RichTextBox.Resources>
        </-->
        <ScrollViewer Grid.Row="3" VerticalScrollBarVisibility="Auto">
            <TextBox Name="tb" TextAlignment="Left" FontFamily="Lucida Console">
            </TextBox>
        </ScrollViewer>
        <Grid Grid.Row="2" Background="#FFDEDEDE">
            <TabControl x:Name="TabControlScript" SelectionChanged="TabControlScript_SelectionChanged" >
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <RichTextBox x:Name="TextScript" FontFamily="Lucida Console" KeyUp="TextScript_KeyUp" BorderThickness="0" AcceptsReturn="True" VerticalScrollBarVisibility="Auto">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </RichTextBox.Resources>
                        </RichTextBox>
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid>
                                        <Grid x:Name="TabItemPanel">
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="10"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>-->
                                            <Border x:Name="Border1" Background="#FFAEAEAE" Height="25" CornerRadius="10,10,5,5" HorizontalAlignment="Stretch"
                                                    BorderBrush="#FFC5C5C5" BorderThickness="2">
                                                
                                            </Border>
                                            <Border x:Name="Border2" BorderThickness="0" BorderBrush="#FFC5C5C5"
                                                    CornerRadius="10,10,0,0" Height="25" HorizontalAlignment="Stretch">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter ContentSource="Header" Margin="5,5,5,5" RecognizesAccessKey="True"/>
                                                        <!--TextBlock Grid.Column="0" Text="PowerShellScript1.ps1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,5,0"/-->
                                                    <Button x:Name="ButtonClose" IsEnabled="False" 
                                                            Visibility="Collapsed" Grid.Column="1" Margin="0,0,2,0" Width="15" Height="15" 
                                                            Click="ButtonClose_Click" Template="{StaticResource ButtonCloseStyle}">
                                                        
                                                    </Button>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border1" Property="Background" Value="White"/>
                                            <Setter TargetName="Border1" Property="CornerRadius" Value="10,10,0,0"/>
                                            <Setter TargetName="Border1" Property="BorderThickness" Value="2,2,2,0"/>
                                            <Setter TargetName="Border1" Property="Margin" Value="0,0,0,-1"/>
                                            <Setter TargetName="Border1" Property="Height" Value="29"/>

                                            <Setter TargetName="Border2" Property="Background" Value="White"/>
                                            <Setter TargetName="Border2" Property="CornerRadius" Value="10,10,0,0"/>
                                            <Setter TargetName="Border2" Property="BorderThickness" Value="2,2,2,0"/>
                                            <Setter TargetName="ButtonClose" Property="IsEnabled" Value="True"/>
                                            <Setter TargetName="ButtonClose" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="ButtonClose" Property="Margin" Value="-3,0,2,0"/>
                                        </Trigger>
                                        

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border1" Property="Background" Value="White"/>
                                            <Setter TargetName="ButtonClose" Property="IsEnabled" Value="False"/>
                                            <!--Setter TargetName="ButtonClose" Property="Visibility" Value="Hidden"/-->
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>
        <Menu Background="#FFDEDEDE">
            <MenuItem Style="{DynamicResource MenuStyle}" Background="#FF9C9C9C" Grid.Column="0" Grid.Row="0" Header="File">
                <MenuItem Header="New" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Header="Open" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Header="Save" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Header="SaveAs..." Style="{DynamicResource MenuStyle}"></MenuItem>
                <Separator Height="2"/>
                <MenuItem Header="Exit" Style="{DynamicResource MenuStyle}"></MenuItem>
            </MenuItem>
            <MenuItem Style="{DynamicResource MenuStyle}" Grid.Column="1" Header="Edit" Grid.Row="0">
                <MenuItem Name="miUndo" Header="Undo" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Name="miRedo" Header="Redo" Style="{DynamicResource MenuStyle}"></MenuItem>
                <Separator Height="5"></Separator>
                <MenuItem Header="Cut" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Header="Copy" Style="{DynamicResource MenuStyle}"></MenuItem>
                <MenuItem Header="Paste" Style="{DynamicResource MenuStyle}"></MenuItem>
            </MenuItem>
            <MenuItem Style="{DynamicResource MenuStyle}" Grid.Column="2" Header="View" Grid.Row="0">
                <MenuItem Header="Setting of syntax highlighting" Style="{DynamicResource MenuStyle}"/>
                <MenuItem Header="Setting of command window" Style="{DynamicResource MenuStyle}"/>
            </MenuItem>
            <MenuItem Style="{DynamicResource MenuStyle}" Grid.Column="3" Header="Terminal" Grid.Row="0">
                <MenuItem Header="Cmd" Style="{DynamicResource MenuStyle}"/>
                <MenuItem Header="Powershell" Style="{DynamicResource MenuStyle}"/>
            </MenuItem>
        </Menu>
    </Grid>
</Window>
